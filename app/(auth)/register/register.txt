
"use client";

import React, { useState } from "react";
import { useRouter } from "next/navigation";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { zodResolver } from "@hookform/resolvers/zod";
import {
  Mail,
  Lock,
  User,
  Instagram,
  Link2,
  FileText,
  Loader2,
  UserPlus,
  Globe,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
  FormDescription,
} from "@/components/ui/form";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { useToast } from "@/hooks/use-toast";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { countries } from "@/lib/countries";
import Image from "next/image";
import Link from "next/link";

const registerSchema = z
  .object({
    name: z.string().min(2, {
      message: "Name must be at least 2 characters",
    }),
    email: z.string().email({
      message: "Please enter a valid email address",
    }),
    password: z.string().min(6, {
      message: "Password must be at least 6 characters",
    }),
    confirmPassword: z.string().min(6, {
      message: "Password must be at least 6 characters",
    }),
    country: z.string({
      required_error: "Please select your country of residence",
    }),
    instagram: z.string().optional(),
    portfolio: z
      .string()
      .url({
        message: "Please enter a valid URL",
      })
      .optional()
      .or(z.literal("")),
    bio: z
      .string()
      .max(300, {
        message: "Bio must be at most 300 characters",
      })
      .optional(),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: "Passwords do not match",
    path: ["confirmPassword"],
  });

type RegisterFormValues = z.infer<typeof registerSchema>;

const Register = () => {
  const router = useRouter();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { toast } = useToast();
  const form = useForm<RegisterFormValues>({
    resolver: zodResolver(registerSchema),
    defaultValues: {
      name: "",
      email: "",
      password: "",
      confirmPassword: "",
      country: "",
      instagram: "",
      portfolio: "",
      bio: "",
    },
  });

  const onSubmit = async (data: RegisterFormValues) => {
    setIsSubmitting(true);
    try {
      const response = await fetch("/api/auth/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: data.email,
          password: data.password,
          name: data.name,
          country: data.country,
          instagram: data.instagram,
          portfolio: data.portfolio,
          bio: data.bio,
        }),
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || "Registration failed");
      }

      toast({
        title: "Registration successful",
        description:
          "Your account is pending approval. We'll notify you by email.",
      });

      router.push("/pending-approval");
    } catch (error: any) {
      console.error("Registration error:", error);
      toast({
        variant: "destructive",
        title: "Registration failed",
        description: error.message || "An error occurred during registration",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-b from-white to-artist-light">
      <header className="w-full flex justify-center items-center py-[15px] px-4">
        <div className="container mx-auto">
          <Image
            width={100}
            height={100}
            src="https://cdn.shopify.com/s/files/1/0759/0913/6701/files/b2bdeinspar.svg?v=1744817176"
            alt="B2B DEINSPAR"
            className="h-5 w-auto cursor-pointer"
            onClick={() => router.push("/")}
          />
        </div>
      </header>
      <Separator className="bg-gray-200" />

      <div className="flex-grow flex flex-col items-center justify-center p-4 my-[50px]">
        <div className="container mx-auto max-w-xl">
          <div className="text-center mb-6 md:mb-8">
            <h1 className="font-bold bg-clip-text bg-gradient-to-r from-artist-primary to-artist-dark md:text-2xl text-2xl">
              Become a Creator with Deinspar
            </h1>

            <p className="mt-2 text-slate-950 font-normal text-sm">
              Create, upload, and sell your poster designs effortlessly.
            </p>
          </div>

          <Card className="border-artist-light shadow-md">
            <CardHeader className="px-6 py-4 md:py-6">
              <CardTitle className="text-xl text-center md:text-xl">
                Join as a Creator
              </CardTitle>
              <CardDescription className="text-center text-sm text-slate-950">
                Upload your designs. We'll do the rest.
              </CardDescription>
            </CardHeader>
            <CardContent className="px-6">
              <Form {...form}>
                <form
                  onSubmit={form.handleSubmit(onSubmit)}
                  className="space-y-4"
                >
                  <div className="space-y-4">
                    <FormField
                      control={form.control}
                      name="name"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Full Name</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <User className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                placeholder="Your name"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="email"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Email</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Mail className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                placeholder="email@example.com"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="password"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Password</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Lock className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                type="password"
                                placeholder="••••••"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="confirmPassword"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Confirm Password</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Lock className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                type="password"
                                placeholder="••••••"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />

                    <FormField
                      control={form.control}
                      name="country"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Country of Residence</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Globe className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500 z-10" />
                              <Select
                                onValueChange={field.onChange}
                                defaultValue={field.value}
                              >
                                <SelectTrigger className="pl-10 w-full">
                                  <SelectValue placeholder="Please select the country where you are currently based" />
                                </SelectTrigger>
                                <SelectContent>
                                  {countries.map((country) => (
                                    <SelectItem
                                      key={country.code}
                                      value={country.code}
                                    >
                                      {country.name}
                                    </SelectItem>
                                  ))}
                                </SelectContent>
                              </Select>
                            </div>
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />

                    <Separator className="my-4" />
                    <h3 className="text-md font-medium">
                      Optional Information
                    </h3>

                    <FormField
                      control={form.control}
                      name="instagram"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Instagram</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Instagram className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                placeholder="@yourusername"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormDescription>
                            Your Instagram username
                          </FormDescription>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="portfolio"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Portfolio Website</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <Link2 className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500" />
                              <Input
                                placeholder="https://your-portfolio.com"
                                className="pl-10"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormDescription>
                            Link to your personal website or portfolio
                          </FormDescription>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="bio"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Short Bio</FormLabel>
                          <FormControl>
                            <div className="relative">
                              <FileText className="absolute left-3 top-3 h-4 w-4 text-gray-500" />
                              <Textarea
                                placeholder="Tell us a bit about yourself and your art style..."
                                className="pl-10 min-h-24"
                                {...field}
                              />
                            </div>
                          </FormControl>
                          <FormDescription>
                            Maximum 300 characters
                          </FormDescription>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                  </div>
                  <Button
                    type="submit"
                    className="w-full"
                    disabled={isSubmitting}
                  >
                    {isSubmitting ? (
                      <>
                        <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                        Submitting...
                      </>
                    ) : (
                      <>
                        <UserPlus className="mr-2 h-4 w-4" />
                        Register
                      </>
                    )}
                  </Button>
                </form>
              </Form>
            </CardContent>
            <CardFooter className="px-6 py-4 md:py-6">
              <div className="text-sm text-center w-full">
                Already have an account?{" "}
                <Link
                  href="/login"
                  className="text-artist-primary hover:text-artist-dark font-medium"
                >
                  Log in
                </Link>
              </div>
            </CardFooter>
          </Card>
        </div>
      </div>

      <div className="flex-grow py-8"></div>

      <footer className="bg-white py-8 border-t border-gray-200 w-full mt-auto">
        <div className="container mx-auto px-4">
          <div className="flex flex-col items-center justify-center text-center">
            <p className="mb-4 text-xs font-normal">B2B DEINSPAR © 2025</p>
            <div className="flex gap-2 text-sm flex-wrap justify-center">
              <a
                href="mailto:b2b@deinspar.com"
                className="text-artist-primary hover:text-artist-dark"
              >
                Contact
              </a>
              <span className="text-gray-300">|</span>

              <span className="text-gray-300">|</span>
              <a
                href="https://deinspar.com/policies/privacy-policy"
                className="text-artist-primary hover:text-artist-dark"
                target="_blank"
                rel="noopener noreferrer"
              >
                Privacy Policy
              </a>
              <span className="text-gray-300">|</span>
              <a
                href="https://deinspar.com/policies/terms-of-service"
                className="text-artist-primary hover:text-artist-dark"
                target="_blank"
                rel="noopener noreferrer"
              >
                Terms of Service
              </a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};
export default Register;
